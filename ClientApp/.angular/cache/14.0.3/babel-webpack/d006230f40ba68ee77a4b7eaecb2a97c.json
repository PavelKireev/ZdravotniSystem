{"ast":null,"code":"import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../authentication.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\n\nfunction LoginComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.errorMessage, \" \");\n  }\n}\n\nfunction LoginComponent_em_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"em\");\n    i0.ɵɵtext(1, \"Username is required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LoginComponent_em_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"em\");\n    i0.ɵɵtext(1, \"Password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(authService, router, route, loginForm) {\n      this.authService = authService;\n      this.router = router;\n      this.route = route;\n      this.loginForm = loginForm;\n      this.errorMessage = '';\n\n      this.validateControl = controlName => {\n        var _a, _b, _c;\n\n        return ((_a = this.loginForm.get(controlName)) === null || _a === void 0 ? void 0 : _a.invalid) && ((_c = (_b = this.loginForm) === null || _b === void 0 ? void 0 : _b.get(controlName)) === null || _c === void 0 ? void 0 : _c.touched);\n      };\n\n      this.hasError = (controlName, errorName) => {\n        var _a;\n\n        return (_a = this.loginForm.get(controlName)) === null || _a === void 0 ? void 0 : _a.hasError(errorName);\n      };\n\n      this.loginUser = loginFormValue => {\n        this.showError = false;\n        const login = Object.assign({}, loginFormValue);\n        const userForAuth = {\n          email: login.username,\n          password: login.password\n        };\n        this.authService.loginUser('api/accounts/login', userForAuth).subscribe({\n          next: res => {\n            localStorage.setItem(\"token\", res.token);\n            this.router.navigate([this.returnUrl]);\n          },\n          error: err => {\n            this.errorMessage = err.message;\n            this.showError = true;\n          }\n        });\n      };\n    }\n\n    ngOnInit() {\n      this.loginForm = new FormGroup({\n        username: new FormControl(\"\", [Validators.required]),\n        password: new FormControl(\"\", [Validators.required])\n      });\n      this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n    }\n\n  }\n\n  LoginComponent.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthenticationService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.FormGroup));\n  };\n\n  LoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 25,\n    vars: 5,\n    consts: [[1, \"card\"], [1, \"card-body\"], [1, \"card-title\"], [\"class\", \"alert alert-danger\", \"role\", \"alert\", 4, \"ngIf\"], [\"autocomplete\", \"off\", \"novalidate\", \"\", 3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\", \"row\"], [\"for\", \"username\", 1, \"col-form-label\", \"col-sm-2\"], [1, \"col-md-5\"], [\"type\", \"text\", \"id\", \"username\", \"formControlName\", \"username\", 1, \"form-control\"], [4, \"ngIf\"], [\"for\", \"password\", 1, \"col-form-label\", \"col-sm-2\"], [\"type\", \"password\", \"id\", \"password\", \"formControlName\", \"password\", 1, \"form-control\"], [1, \"col-md-1\"], [\"type\", \"submit\", 1, \"btn\", \"btn-info\", 3, \"disabled\"], [\"role\", \"alert\", 1, \"alert\", \"alert-danger\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\", 2);\n        i0.ɵɵtext(3, \"Login\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(4, LoginComponent_div_4_Template, 2, 1, \"div\", 3);\n        i0.ɵɵelementStart(5, \"form\", 4);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_5_listener() {\n          return ctx.loginUser(ctx.loginForm.value);\n        });\n        i0.ɵɵelementStart(6, \"div\", 5)(7, \"label\", 6);\n        i0.ɵɵtext(8, \"Username:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 7);\n        i0.ɵɵelement(10, \"input\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"div\", 7);\n        i0.ɵɵtemplate(12, LoginComponent_em_12_Template, 2, 0, \"em\", 9);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(13, \"div\", 5)(14, \"label\", 10);\n        i0.ɵɵtext(15, \"Password:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"div\", 7);\n        i0.ɵɵelement(17, \"input\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"div\", 7);\n        i0.ɵɵtemplate(19, LoginComponent_em_19_Template, 2, 0, \"em\", 9);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(20, \"br\");\n        i0.ɵɵelementStart(21, \"div\", 5)(22, \"div\", 12)(23, \"button\", 13);\n        i0.ɵɵtext(24, \"Login\");\n        i0.ɵɵelementEnd()()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.showError);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngIf\", ctx.validateControl(\"username\") && ctx.hasError(\"username\", \"required\"));\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngIf\", ctx.validateControl(\"password\") && ctx.hasError(\"password\", \"required\"));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"disabled\", !ctx.loginForm.valid);\n      }\n    },\n    dependencies: [i4.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName]\n  });\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}