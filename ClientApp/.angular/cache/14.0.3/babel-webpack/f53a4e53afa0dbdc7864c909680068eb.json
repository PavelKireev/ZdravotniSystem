{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../authentication.service\";\nimport * as i2 from \"./../../shared/custom-validators/password-confirmation-validator.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\n\nfunction RegisterUserComponent_em_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"em\");\n    i0.ɵɵtext(1, \"Please provide a valid email\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction RegisterUserComponent_em_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"em\");\n    i0.ɵɵtext(1, \"Email is required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction RegisterUserComponent_em_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"em\");\n    i0.ɵɵtext(1, \"Password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction RegisterUserComponent_em_46_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"em\");\n    i0.ɵɵtext(1, \"Confirmation is required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction RegisterUserComponent_em_47_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"em\");\n    i0.ɵɵtext(1, \"Passwords must match\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let RegisterUserComponent = /*#__PURE__*/(() => {\n  class RegisterUserComponent {\n    constructor(authService, passConfValidator, router) {\n      this.authService = authService;\n      this.passConfValidator = passConfValidator;\n      this.router = router;\n      this.errorMessage = '';\n\n      this.validateControl = controlName => {\n        return this.registerForm.get(controlName).invalid && this.registerForm.get(controlName).touched;\n      };\n\n      this.hasError = (controlName, errorName) => {\n        return this.registerForm.get(controlName).hasError(errorName);\n      };\n\n      this.registerUser = registerFormValue => {\n        this.showError = false;\n        const formValues = Object.assign({}, registerFormValue);\n        const user = {\n          firstName: formValues.firstName,\n          lastName: formValues.lastName,\n          email: formValues.email,\n          password: formValues.password,\n          confirmPassword: formValues.confirm\n        };\n        this.authService.registerUser(\"api/accounts/registration\", user).subscribe({\n          next: _ => this.router.navigate([\"/authentication/login\"]),\n          error: err => {\n            this.errorMessage = err.message;\n            this.showError = true;\n          }\n        });\n      };\n    }\n\n    ngOnInit() {\n      this.registerForm = new FormGroup({\n        firstName: new FormControl(''),\n        lastName: new FormControl(''),\n        email: new FormControl('', [Validators.required, Validators.email]),\n        password: new FormControl('', [Validators.required]),\n        confirm: new FormControl('')\n      });\n      this.registerForm.get('confirm').setValidators([Validators.required, this.passConfValidator.validateConfirmPassword(this.registerForm.get('password'))]);\n    }\n\n  }\n\n  RegisterUserComponent.ɵfac = function RegisterUserComponent_Factory(t) {\n    return new (t || RegisterUserComponent)(i0.ɵɵdirectiveInject(i1.AuthenticationService), i0.ɵɵdirectiveInject(i2.PasswordConfirmationValidatorService), i0.ɵɵdirectiveInject(i3.Router));\n  };\n\n  RegisterUserComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RegisterUserComponent,\n    selectors: [[\"app-register-user\"]],\n    decls: 48,\n    vars: 7,\n    consts: [[1, \"card\"], [1, \"card-body\"], [1, \"card-title\"], [\"autocomplete\", \"off\", \"novalidate\", \"\", 3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\", \"row\"], [\"for\", \"firstName\", 1, \"col-form-label\", \"col-sm-2\"], [1, \"col-md-5\"], [\"type\", \"text\", \"id\", \"firstName\", \"formControlName\", \"firstName\", 1, \"form-control\"], [\"for\", \"lastName\", 1, \"col-form-label\", \"col-sm-2\"], [\"type\", \"text\", \"id\", \"lastName\", \"formControlName\", \"lastName\", 1, \"form-control\"], [\"for\", \"email\", 1, \"col-form-label\", \"col-sm-2\"], [\"type\", \"email\", \"id\", \"email\", \"formControlName\", \"email\", 1, \"form-control\"], [4, \"ngIf\"], [\"for\", \"password\", 1, \"col-form-label\", \"col-sm-2\"], [\"type\", \"password\", \"id\", \"password\", \"formControlName\", \"password\", 1, \"form-control\"], [\"for\", \"confirm\", 1, \"col-form-label\", \"col-sm-2\"], [\"type\", \"password\", \"id\", \"confirm\", \"formControlName\", \"confirm\", 1, \"form-control\"], [1, \"col-md-1\"], [\"type\", \"submit\", 1, \"btn\", \"btn-info\", 3, \"disabled\"], [1, \"form-group\", \"row\"]],\n    template: function RegisterUserComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\", 2);\n        i0.ɵɵtext(3, \"Register\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"form\", 3);\n        i0.ɵɵlistener(\"ngSubmit\", function RegisterUserComponent_Template_form_ngSubmit_4_listener() {\n          return ctx.registerUser(ctx.registerForm.value);\n        });\n        i0.ɵɵelementStart(5, \"div\", 4)(6, \"label\", 5);\n        i0.ɵɵtext(7, \"First Name:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 6);\n        i0.ɵɵelement(9, \"input\", 7);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(10, \"div\", 4)(11, \"label\", 8);\n        i0.ɵɵtext(12, \"Last Name:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 6);\n        i0.ɵɵelement(14, \"input\", 9);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(15, \"div\", 4)(16, \"label\", 10);\n        i0.ɵɵtext(17, \"Email:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"div\", 6);\n        i0.ɵɵelement(19, \"input\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"div\", 6);\n        i0.ɵɵtemplate(21, RegisterUserComponent_em_21_Template, 2, 0, \"em\", 12);\n        i0.ɵɵtemplate(22, RegisterUserComponent_em_22_Template, 2, 0, \"em\", 12);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(23, \"div\", 4)(24, \"label\", 13);\n        i0.ɵɵtext(25, \"Password:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"div\", 6);\n        i0.ɵɵelement(27, \"input\", 14);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"div\", 6);\n        i0.ɵɵtemplate(29, RegisterUserComponent_em_29_Template, 2, 0, \"em\", 12);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(30, \"div\", 4)(31, \"label\", 15);\n        i0.ɵɵtext(32, \"Confirm Password:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(33, \"div\", 6);\n        i0.ɵɵelement(34, \"input\", 16);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(35, \"br\");\n        i0.ɵɵelementStart(36, \"div\", 4)(37, \"div\", 17)(38, \"button\", 18);\n        i0.ɵɵtext(39, \"Register\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(40, \"div\", 19)(41, \"label\", 15);\n        i0.ɵɵtext(42, \"Confirm Password:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(43, \"div\", 6);\n        i0.ɵɵelement(44, \"input\", 16);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(45, \"div\", 6);\n        i0.ɵɵtemplate(46, RegisterUserComponent_em_46_Template, 2, 0, \"em\", 12);\n        i0.ɵɵtemplate(47, RegisterUserComponent_em_47_Template, 2, 0, \"em\", 12);\n        i0.ɵɵelementEnd()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formGroup\", ctx.registerForm);\n        i0.ɵɵadvance(17);\n        i0.ɵɵproperty(\"ngIf\", ctx.validateControl(\"email\") && ctx.hasError(\"email\", \"email\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.validateControl(\"email\") && ctx.hasError(\"email\", \"required\"));\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngIf\", ctx.validateControl(\"password\") && ctx.hasError(\"password\", \"required\"));\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"disabled\", !ctx.registerForm.valid);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngIf\", ctx.validateControl(\"confirm\") && ctx.hasError(\"confirm\", \"required\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.hasError(\"confirm\", \"mustMatch\"));\n      }\n    },\n    dependencies: [i4.NgIf, i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.FormGroupDirective, i5.FormControlName],\n    styles: [\"em[_ngcontent-%COMP%]{color:#e71515;font-weight:700}.ng-invalid.ng-touched[_ngcontent-%COMP%]{border-color:red}.card[_ngcontent-%COMP%]{margin-top:10px;background-color:#fff;box-shadow:1px 1px 1px #cabcbc}\"]\n  });\n  return RegisterUserComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}